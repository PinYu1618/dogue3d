/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mug: THREE.Mesh
  }
  materials: {}
}

export function Mug(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/room6/mug-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mug.geometry}
        material={nodes.Mug.material}
        position={[-2.04, 1.29, 1.92]}
        scale={0.19}
      />
    </group>
  )
}

useGLTF.preload('/models/room6/mug-transformed.glb')
