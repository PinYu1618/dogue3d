/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Desk: THREE.Mesh
    MeshDeskDrawer002: THREE.Mesh
    MeshDeskDrawer002_1: THREE.Mesh
  }
  materials: {
    Wood: THREE.MeshStandardMaterial
    ['metal.001']: THREE.MeshStandardMaterial
  }
}

export function Desk(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/models/room6/desk-transformed.glb'
  ) as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Desk.geometry}
        material={materials.Wood}
        position={[-1.17, 0, 2.25]}
        rotation={[0, 1.57, 0]}
      >
        <group position={[0.14, 0.96, -0.57]} scale={3.49}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.MeshDeskDrawer002.geometry}
            material={materials.Wood}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.MeshDeskDrawer002_1.geometry}
            material={materials['metal.001']}
          />
        </group>
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/room6/desk-transformed.glb')
