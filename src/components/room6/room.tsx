/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane025: THREE.Mesh
    Plane025_1: THREE.Mesh
    paneling009: THREE.Mesh
    paneling010: THREE.Mesh
    paneling011: THREE.Mesh
    paneling012: THREE.Mesh
    Rug: THREE.Mesh
    Mesh_wallWindowSlide002: THREE.Mesh
    Mesh_wallWindowSlide002_1: THREE.Mesh
    Mesh_wallWindowSlide002_2: THREE.Mesh
    Mesh_windowBottom002: THREE.Mesh
    Mesh_windowBottom002_1: THREE.Mesh
    Mesh_windowTop002: THREE.Mesh
    Mesh_windowTop002_1: THREE.Mesh
  }
  materials: {
    white: THREE.MeshStandardMaterial
    Wood: THREE.MeshStandardMaterial
    ['wood.003']: THREE.MeshStandardMaterial
    metalDark: THREE.MeshStandardMaterial
    _defaultMat: THREE.MeshStandardMaterial
    glass: THREE.MeshStandardMaterial
  }
}

export function Room(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/room6/room.glb') as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane025.geometry}
        material={materials.white}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane025_1.geometry}
        material={materials.Wood}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.paneling009.geometry}
        material={materials['wood.003']}
        position={[-2.57, -0.07, -2.5]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[10, 1, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.paneling010.geometry}
        material={materials['wood.003']}
        position={[-2.5, 0.01, 2.57]}
        rotation={[0, 1.57, 0]}
        scale={[9.78, 1, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.paneling011.geometry}
        material={materials['wood.003']}
        position={[-2.5, 0, -2.34]}
        scale={[10, 1, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.paneling012.geometry}
        material={materials['wood.003']}
        position={[2.5, -0.1, -2.5]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={[10.14, 1, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Rug.geometry}
        material={nodes.Rug.material}
        position={[1.12, 0, 1.33]}
        rotation={[0, 0, Math.PI]}
        scale={[-1.35, -0.01, -1.05]}
      />
      <group position={[-2.5, 0, -2.34]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_wallWindowSlide002.geometry}
          material={materials.Wood}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_wallWindowSlide002_1.geometry}
          material={materials.metalDark}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_wallWindowSlide002_2.geometry}
          material={materials._defaultMat}
        />
        <group position={[0.97, 1.22, -0.05]} scale={3.1}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_windowBottom002.geometry}
            material={materials.glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_windowBottom002_1.geometry}
            material={materials.Wood}
          />
        </group>
        <group position={[0.97, 2.25, 0.03]} scale={3.1}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_windowTop002.geometry}
            material={materials.glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_windowTop002_1.geometry}
            material={materials.Wood}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/room6/room.glb')
